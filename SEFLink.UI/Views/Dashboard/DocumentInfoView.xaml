<UserControl x:Class="SEFLink.UI.Views.Dashboard.DocumentInfoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SEFLink.UI.Views.Dashboard"
             xmlns:model="clr-namespace:SEFLink.Model;assembly=SEFLink.Model" xmlns:dashboard="clr-namespace:SEFLink.UI.ViewModels.Dashboard" d:DataContext="{d:DesignInstance Type=dashboard:DocumentInfoViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        
        <!--#region Base Status Button Style -->
        <Style x:Key="StatusButtonStyle" TargetType="{x:Type Button}">

            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Focusable" Value="False" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />

            <Setter Property="Height" Value="22"/>
            <Setter Property="Width" Value="22"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                            CornerRadius="25" 
                            Opacity="{TemplateBinding Opacity}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region SAVED Status Button Style -->
        <Style x:Key="SavedStatus" BasedOn="{StaticResource StatusButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Status.Background.Green}" />
            <Setter Property="Foreground" Value="{StaticResource Status.Foreground.Green}" />

            <!--<Setter Property="ToolTip" Value="Poslano na SEF." />-->

            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Image Style="{StaticResource SavedStatusIcon}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Status.Background.Green.MouseOver}" />

                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Image Style="{StaticResource SavedStatusIcon_MouseOver}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region PENDING Status Button Style -->
        <Style x:Key="PendingStatus" BasedOn="{StaticResource StatusButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Status.Background.Yellow}" />
            <Setter Property="Foreground" Value="{StaticResource Status.Foreground.Yellow}" />

            <!--<Setter Property="ToolTip" Value="Slanje na SEF u toku." />-->

            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Image Style="{StaticResource PendingStatusIcon}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Status.Background.Yellow.MouseOver}" />

                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Image Style="{StaticResource PendingStatusIcon_MouseOver}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region ERROR Status Button Style -->
        <Style x:Key="ErrorStatus" BasedOn="{StaticResource StatusButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Status.Background.Red}" />
            <Setter Property="Foreground" Value="{StaticResource Status.Foreground.Red}" />

            <!--<Setter Property="ToolTip" Value="Greška pri slanju na SEF." />-->

            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Image Style="{StaticResource ErrorStatusIcon}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Status.Background.Red.MouseOver}" />

                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Image Style="{StaticResource ErrorStatusIcon_MouseOver}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region ARCHIVED Status Button Style -->
        <Style x:Key="ArchivedStatus" BasedOn="{StaticResource StatusButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Status.Background.Blue}" />
            <Setter Property="Foreground" Value="{StaticResource Status.Foreground.Blue}" />

            <!--<Setter Property="ToolTip" Value="Arhivirano." />-->

            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Image Style="{StaticResource ArchivedStatusIcon}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Status.Background.Blue.MouseOver}" />

                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Image Style="{StaticResource ArchivedStatusIcon_MouseOver}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

    </UserControl.Resources>
    
    <Grid>


        <!--#region Grid Definitions -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"  MinWidth="35" />    <!-- checkbox -->
            <ColumnDefinition Width="3*"    MinWidth="75"/>     <!-- endpoint -->
            <ColumnDefinition Width="2.5*"  MinWidth="60"/>     <!-- number -->
            <ColumnDefinition Width="*"     MinWidth="40"/>     <!-- type -->
            <ColumnDefinition Width="*"     MinWidth="60"/>     <!-- date -->
            <ColumnDefinition Width="*"     MinWidth="50"/>     <!-- status -->
            <ColumnDefinition Width="auto"  MinWidth="20"/>     <!-- eye? -->
        </Grid.ColumnDefinitions>
        <!--#endregion-->


        <!--#region Status Content Resources -->
        <Grid.Resources>
            <DataTemplate DataType="{x:Type model:DocStatus}">
                
                <Button x:Name="btn"/>
                
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding}" Value="Saved">
                        <Setter TargetName="btn" Property="Style" Value="{StaticResource SavedStatus}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding}" Value="Pending">
                        <Setter TargetName="btn" Property="Style" Value="{StaticResource PendingStatus}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding}" Value="Error">
                        <Setter TargetName="btn" Property="Style" Value="{StaticResource ErrorStatus}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding}" Value="Archived">
                        <Setter TargetName="btn" Property="Style" Value="{StaticResource ArchivedStatus}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Grid.Resources>
        <!--#endregion-->


        <!--#region Content -->
        <CheckBox Margin="10" IsChecked="{Binding IsSelected, Mode=TwoWay}"/>

        <TextBlock Text="{Binding Endpoint}" 
                   Style="{DynamicResource CustomTextStyle_Normal}"
                   ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}"                                       
                   Grid.Column="1"/>

        <TextBlock Text="{Binding Number}" 
                   Style="{DynamicResource CustomTextStyle_Normal}" 
                   ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}"                                       
                   Grid.Column="2"/>

        <Border CornerRadius="5" 
                Grid.Column="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="40"
                Height="30"
                Background="{DynamicResource Global.LightPink}">

            <TextBlock Text="{Binding Type}" 
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Style="{DynamicResource CustomTextStyle_Normal}"/>

        </Border>

        <TextBlock Text="{Binding Date}" 
                   Style="{DynamicResource CustomTextStyle_Normal}" 
                   Grid.Column="4"/>

        <ContentControl Content="{Binding Status}" Width="30" Focusable="False" Grid.Column="5">
            <ContentControl.ToolTip>
                
                <ToolTip Background="Transparent" Padding="0" BorderThickness="0" Placement="Left">
                    
                    <Border CornerRadius="5" MinHeight="50" MinWidth="100" Padding="15">
                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="10"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                                       
                            <TextBlock Text="{Binding TooltipText}"
                                       Grid.Row="0"
                                       FontSize="14" 
                                       FontWeight="DemiBold" 
                                       Foreground="White"/>

                            <TextBlock Text="{Binding TooltipDateTime}" 
                                       Grid.Row="2"
                                       FontSize="10" 
                                       FontWeight="DemiBold" 
                                       Foreground="White" 
                                       Margin="0"/>
                                                    
                        </Grid>

                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="Saved">
                                        <Setter Property="Background" Value="#237b4b" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="Pending">
                                        <Setter Property="Background" Value="#d69e26" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DocStatus.Error}">
                                        <Setter Property="Background" Value="#c4314b" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static model:DocStatus.Archived}">
                                        <Setter Property="Background" Value="#5555ff" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                    
                </ToolTip>

            </ContentControl.ToolTip>
            
        </ContentControl>

        <Button Style="{DynamicResource TransparentRoundedButtonStyle}" 
                ToolTip="Add to watch list." 
                Height="25" 
                VerticalAlignment="Center" 
                Focusable="False"
                Margin="5"
                Grid.Column="6">
            <Image Style="{DynamicResource EyeIcon}"/>
        </Button>
        <!--#endregion-->


    </Grid>
</UserControl>
